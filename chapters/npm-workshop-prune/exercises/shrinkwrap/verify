#!/usr/bin/env node

"use strict"

var fs = require('fs')
var path = require('path')
var assert = require('assertf')
var exec = require('child_process').exec
var rimraf = require('rimraf')
var semver = require('semver')
process.on('uncaughtException', require('workshop-assertion-message'));

var shrinkwrapDir = path.resolve(process.cwd(), 'shrinkwrap')

var oldPkg = require(path.resolve(__dirname, '../../bootstrap/shrinkwrap/package.json'))
var newPkg = require(path.resolve(shrinkwrapDir, 'package.json'))

rimraf.sync(path.resolve(shrinkwrapDir, 'node_modules'))

assert.deepEqual(oldPkg, newPkg, 'Do not modify the package.json!\nThe unaltered package.json is:\n' + JSON.stringify(oldPkg, null, 2))
var answer = 'bhjhbj'

exec('npm install', {cwd: shrinkwrapDir}, function(err) {
  if (err) throw err
  exec('npm ls --json', {cwd: shrinkwrapDir}, function(err, stdout, stderr) {
    assert.ok(!err, '%s%s\n%s\n%s', err && err.message, 'npm ls', stdout, stderr)
    var ls = JSON.parse(stdout.trim())

    var inner = 'asdasd'

    try {
      inner = ls.dependencies['accepts'].dependencies['mime-types'].version
    } catch(e) {
      assert(false, 'accepts does not seem to have a mime-types dependency??')
    }
    var outer = ls.dependencies['mime-types'].version
    assert.ok(semver.gt(inner, outer), "Hm, it does not seem that accepts is using the highest valid mime-types available?")
    console.info("\nNice shrinkwrapping!\n")
  })
})
