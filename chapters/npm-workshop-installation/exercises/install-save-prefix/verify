#!/usr/bin/env node

"use strict"

var fs = require('fs')
var util = require('util')
var path = require('path')
var exec = require('child_process').exec
var semver = require('semver')
var assert = require('assertf')

process.on('uncaughtException', require('workshop-assertion-message'));

function inspect(obj) {
  return util.inspect(obj, {colors: true, depth: 30})
}

var target = path.resolve(process.cwd(), 'node_modules/once')
var targetPackage = path.resolve(process.cwd(), 'package.json')

console.info('Checking your package.json exists...')
assert.ok(fs.existsSync(targetPackage), 'Where is your package.json?')

var pkg = require(targetPackage)

console.info('Checking your package.json has dependencies...')
assert.ok(pkg.dependencies, 'package.json needs dependencies: ' + inspect(pkg))

console.info('Checking your package.json has "once" as a dependency...')
assert.ok(pkg.dependencies['once'], 'package.json does not have the once dependency: \n' + inspect(pkg))


console.info('Checking the latest version of once is installed...')
exec('npm info once version', function(err, stdout) {
  assert.ifError(err)
  var version = stdout.trim()
  assert.equal(pkg.dependencies['once'], ">=" + version, 'Incorrect. We want our package to install any version greater than or equal to %s.\nYou specified the range: %s', version, semver.toComparators(pkg.dependencies['once'])[0].join(' '))

  var target = path.resolve(process.cwd(), 'node_modules/once')
  assert.ok(fs.existsSync(target), 'The once package must be installed!')

  console.info('\nGreat stuff, \'once\' will install any version greater than or equal to %s.', version)
})

